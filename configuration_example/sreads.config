/*
 * This is the assembly.config file. Here are the required parameters in order to execute the
 * assembly.nextflow pipeline. It is important to keep in mind that some parameters are incompatible
 * with each other such as: params.shortreads.paired and params.shortreads.single. These type of parameters
 * can have some empty values.
 *
 *                       It has the necessary parameters for a short reads only assembly.
 */

/*
 * Short reads input files. They need to be specified in case of hybrid or shortreads-only assembly.
 * If none of these are wnated it may be left in blank. The files might be single or paired ended. They just
 * need to be properly identified as the examples below.
 * Examples for illumina reads:
 * Paired: params.shortreads.paired = 'SRR6307304_{1,2}.fastq'
 * Single: params.shortreads.single = 'SRR7128258*'
 */
params.shortreads_paired = ''
params.shortreads_single = ''
/*
 * Parameter for reference genome. It is not required and just used in Spades assembly pipeline.
 * It may be left in blank.
 */
params.ref_genome = ''
/*
 * Here we chose the assembly type wanted. This is required to perform the assembly type wanted.
 * It must be set as one of these posibilities: longreads-only ; hybrid ; illumina-only
 */
params.assembly_type = 'illumina-only'
/*
 * Here it is set the software wanted to perform the assembly with.
 * It must be set as true to use the software and false to skip it.
 */
params.try_unicycler = true
params.try_spades = true
/*
 * Here are some other parameters that do not drastically influence the workflow.
 */
//Output folder name
params.outDir = 'output'
//Prefix for output files
params.prefix = 'out'
//Number of threads to be used by each software.
params.threads = 3
//Number of cores to run nanopolish in parallel
params.cpus = 2
//Path to the ?.yaml file containing additional parameters for the software. It may be left blank.
params.yaml = ''

/*
 * Configuring Nextflow Scopes.
 * Do NOT change any of the following
 */

//Queue limit
executor.$local.queueSize = 1

//Trace Report
trace {
    enabled = false
    file = "${params.outDir}" + "/annotation_pipeline_trace.txt"
    fields = 'task_id,name,status,exit,realtime,cpus,%cpu,memory,%mem,rss'
}

//Timeline Report
timeline {
    enabled = false
    file = "${params.outDir}" + "/annotation_pipeline_timeline.html"
}

//Complete Report
report {
    enabled = false
    file = "${params.outDir}" + "/annotation_pipeline_nextflow_report.html"
}

//Docker usage
docker.enabled = true
docker.runOptions = '-u $(id -u):root'
