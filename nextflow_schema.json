{
    "$schema": "https://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": ". pipeline parameters",
    "description": "",
    "type": "object",
    "definitions": {
        "nf_tower_options": {
            "title": "NF tower options",
            "type": "object",
            "description": "Define the required options for launching the pipeline via NF tower",
            "default": "",
            "fa_icon": "fas fa-gopuram",
            "properties": {
                "use_tower": {
                    "type": "boolean",
                    "description": "Launch pipeline in NF tower?"
                },
                "tower_token": {
                    "type": "string",
                    "description": "Your NF tower token for launching the pipeline in it"
                }
            }
        },
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "All the outputs will be stored under this directory."
                },
                "longreads": {
                    "type": "string",
                    "description": "Path to input long reads (ONT or Pacbio) in fastq",
                    "help_text": "This sets path to the input longreads. It is required for longreads-only or hybrid assemblies.",
                    "fa_icon": "fas fa-file"
                },
                "lr_type": {
                    "type": "string",
                    "enum": [
                        "pacbio",
                        "nanopore"
                    ],
                    "default": "nanopore",
                    "description": "Tells whether input longreads are: pacbio or nanopore.",
                    "help_text": "Your long reads are from pacbio or nanopore sequencing platforms?"
                },
                "shortreads_paired": {
                    "type": "string",
                    "fa_icon": "fas fa-copy",
                    "description": "Path to input paired end short reads in fastq",
                    "help_text": "This sets path to the input paired end short reads. It is required for shortreads-only or hybrid assemblies.\nUsers must use the following notation: \"path/to/dir/pattern_{1,2}.fastq\". It can be gzipped or not.\nThe \\*{1,2}\\* regex is required so that nextflow can properly load the exact read pairs. Read more [in their manual](https://www.nextflow.io/docs/latest/channel.html#fromfilepairs)."
                },
                "shortreads_single": {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "description": "Path to input unpaired short reads in fastq",
                    "help_text": "This sets path to the input unpaired short reads. It is required for shortreads-only or hybrid assemblies."
                }
            },
            "required": [
                "outdir"
            ]
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "properties": {
                "threads": {
                    "type": "integer",
                    "description": "Number of threads to use for each process"
                },
                "parallel_jobs": {
                    "type": "integer",
                    "default": 1,
                    "description": "Number of jobs to run in parallel. Each job can consume up to N threads (--threads)"
                },
                "cpus": {
                    "type": "integer",
                    "description": "Number of cores to run nanopolish in parallel"
                }
            }
        },
        "assembly_mode": {
            "title": "Assembly mode",
            "type": "object",
            "fa_icon": "fas fa-ellipsis-v",
            "description": "Select assembly strategy",
            "properties": {
                "assembly_type": {
                    "type": "string",
                    "description": "Assembly strategy: illumina-only, longreads-only or hybrid",
                    "help_text": "Select which assembly strategy to use. The possibilities are: \"illumina-only\", \"longreads-only\" or \"hybrid\".",
                    "enum": [
                        "illumina-only",
                        "longreads-only",
                        "hybrid"
                    ],
                    "fa_icon": "fas fa-ellipsis-v"
                },
                "illumina_polish_longreads_contigs": {
                    "type": "boolean",
                    "description": "For hybrid assemblies, use strategy 2",
                    "help_text": "It must be used with \"--assembly_type = hybrid\".\nThis paremeter tells the pipeline to first create a longreads-only assembly and then polish it with short reads, instead of executing the hybrid assembly modes implemented by Unicycler and SPAdes.",
                    "fa_icon": "fab fa-confluence"
                }
            },
            "required": [
                "assembly_type"
            ]
        },
        "select_assemblers": {
            "title": "Select assemblers",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "try_spades": {
                    "type": "boolean",
                    "description": "Assembly with SPAdes?",
                    "help_text": "Also trigger an assebly with SPAdes?.\nUseful for shortreads-only or hybrid assemblies."
                },
                "try_unicycler": {
                    "type": "boolean",
                    "description": "Assembly with Unicycler?",
                    "help_text": "Also trigger an assebly with Unicycler?.\nUseful for shortreads-only or hybrid assemblies.",
                    "default": true
                },
                "try_canu": {
                    "type": "boolean",
                    "description": "Assembly with Canu?",
                    "help_text": "Also trigger an assebly with Canu?.\nUseful for longreads-only or hybrid assemblies."
                },
                "try_flye": {
                    "type": "boolean",
                    "description": "Assembly with Flye?",
                    "help_text": "Also trigger an assebly with Canu?.\nUseful for longreads-only or hybrid assemblies."
                }
            },
            "fa_icon": "fas fa-tasks"
        },
        "expected_genome_size": {
            "title": "Expected genome size",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "genomeSize": {
                    "type": "string",
                    "description": "Set the expected genome size (E.g. 5.6m; 1.2g)",
                    "help_text": "It sets the expected genome size of the assembly. It is required by Canu and Flye assemblers. E.g. 5.6m; 1.2g."
                }
            }
        },
        "assemblers_additional_parameters": {
            "title": "Assemblers' additional parameters",
            "type": "object",
            "description": "Pass additional parameters to the assemblers",
            "default": "",
            "properties": {
                "spades_additional_parameters": {
                    "type": "string",
                    "description": "SPAdes additional parameters",
                    "help_text": "Passes additional parameters for SPAdes assembler. E.g. '\u2013meta \u2013plasmids'. Must be given as shown in Spades\u2019 manual."
                },
                "unicycler_additional_parameters": {
                    "type": "string",
                    "description": "Unicycler additional parameters",
                    "help_text": "Passes additional parameters for Unicycler assembler. E.g. '\u2013mode conservative \u2013no_correct'. Must be given as shown in Unicycler\u2019s manual."
                },
                "canu_additional_parameters": {
                    "type": "string",
                    "description": "Canu additional parameters",
                    "help_text": "Passes additional parameters for Canu assembler. E.g. 'correctedErrorRate=0.075 corOutCoverage=200'. Must be given as shown in Canu\u2019s manual."
                },
                "flye_additional_parameters": {
                    "type": "string",
                    "description": "Flye additional parameters",
                    "help_text": "Passes additional parameters for Flye assembler. E.g. '\u2013meta \u2013iterations 4'. Must be given as shown in Flye\u2019s manual."
                }
            },
            "fa_icon": "fas fa-list-ul"
        },
        "assembly_polishing_parameters": {
            "title": "Assembly polishing parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "medaka_sequencing_model": {
                    "type": "string",
                    "default": "r941_min_fast_g303",
                    "help_text": "Useful for longreads-only or hybrid assemblies using strategy 2.\nUsed to polish a longreads-only assembly with Medaka. It selects a Medaka ONT sequencing model for polishing. Please read [medaka manual](https://nanoporetech.github.io/medaka/) for more instructions.",
                    "description": "Polish with Medaka? Which model?"
                },
                "nanopolish_fast5Path": {
                    "type": "string",
                    "description": "Polish with Nanopolish? Set path to dir with fast5 data.",
                    "help_text": "Useful for longreads-only or hybrid assemblies using strategy 2.\nUsed to polish a longreads-only assembly with Nanopolish. It sets path to the directory containing all the FAST5 files containing the raw data."
                },
                "nanopolish_max_haplotypes": {
                    "type": "number",
                    "description": "Max. number of haplotypes to be considered by Nanopolish",
                    "help_text": "Useful when polishing the genome with Nanopolish (--nanopolish_fast5Path).\nIt sets the max number of haplotypes to be considered by Nanopolish. Sometimes the pipeline may crash because to much variation was found exceeding the limit.",
                    "default": 1000
                },
                "pacbio_all_bam_path": {
                    "type": "string",
                    "description": "Polish with Arrow? Set path to pacbio subreads.bam",
                    "help_text": "Useful for longreads-only and hybrid assemblies using strategy 2.\nPath to all subreads.bam files for the given reads. Whenever set, the pipeline will execute a polishing step with VarianCaller through arrow. Arrow is supported for PacBio Sequel data and RS data with the P6-C4 chemistry."
                },
                "pilon_memory_limit": {
                    "type": "number",
                    "description": "Max amount of memory allocated by Pilon (in gigabase)",
                    "default": 50,
                    "help_text": "Whenever polishing long reads only assemblies with unpaired short reads (single end), the pipeline will directly execute one round of pilon polishing instead of using Unicycler's polish pipeline. Therefore we need to allocate the amount of memory allocated by Pilon. Default 50G. This step is crucial because with not enough memory will crash and not correct your assembly. When that happens you will not have the pilon output nor the QUAST assessment."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/nf_tower_options"
        },
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/assembly_mode"
        },
        {
            "$ref": "#/definitions/select_assemblers"
        },
        {
            "$ref": "#/definitions/expected_genome_size"
        },
        {
            "$ref": "#/definitions/assemblers_additional_parameters"
        },
        {
            "$ref": "#/definitions/assembly_polishing_parameters"
        }
    ]
}